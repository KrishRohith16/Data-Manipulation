-- We are extracting table 'EmpDevInfo' from the 'CleanedDataDB' database and manipulating the data in various scenarios.

-- 1. To fetch records with Employee names starting with 'R' or 'S'.

SELECT * FROM CleanedDataDB.EmpDevInfo
WHERE emp_name LIKE 'R%' OR emp_name LIKE 'S%';
-- __________________________________________________________________________________________________________________

-- 2. To count the total number of records in a table.

SELECT COUNT(*) AS total_records FROM CleanedDataDB.EmpDevInfo ;
-- __________________________________________________________________________________________________________________

-- 3.  To retrieve unique department names from a column named 'dept_name'.

SELECT DISTINCT dept_name FROM CleanedDataDB.EmpDevInfo ;
-- __________________________________________________________________________________________________________________

-- 4. To calculate the total revenue generated by salaries in each department :

SELECT dept_name, SUM(monthly_salary) as total_revenue FROM CleanedDataDB.EmpDevInfo
GROUP BY dept_name;
-- __________________________________________________________________________________________________________________

-- 5. To select records where the city is specifically 'Chennai'.
 
SELECT * FROM CleanedDataDB.EmpDevInfo
WHERE city_name = 'Chennai';
-- __________________________________________________________________________________________________________________

-- 6. To retrieve employee records sorted in descending order based on the 'rewards' column within a specific department.

SELECT * FROM CleanedDataDB.EmpDevInfo
WHERE dept_name = 'Full Stack Developer'
ORDER BY rewards DESC ;
-- __________________________________________________________________________________________________________________

-- 7. To retrieve the 5 most recently hired employees :

SELECT * FROM CleanedDataDB.EmpDevInfo
ORDER BY hired_date DESC
LIMIT 5 ;
-- __________________________________________________________________________________________________________________

-- 8. To retrieve records of employees who have more than 5 rewards.

SELECT * FROM CleanedDataDB.EmpDevInfo
WHERE rewards > 5;
-- __________________________________________________________________________________________________________________

-- 9. To retrieve the total number of employees working in each department.

SELECT dept_name, COUNT(*) AS total_emps FROM CleanedDataDB.EmpDevInfo
GROUP BY dept_name ;
-- __________________________________________________________________________________________________________________

-- 10. To obtain the total number of employees in a specific department grouped by different cities.

SELECT dept_name, city_name, COUNT(*) AS total_emps FROM CleanedDataDB.EmpDevInfo
WHERE dept_name = 'Front-End Developer'
GROUP BY dept_name, city_name ;
-- __________________________________________________________________________________________________________________

-- 11. To get the total count of male and female employees in each department.

SELECT dept_name, SUM(IF(gender = 'Male', 1, 0)) AS Male, SUM(IF(gender = 'Female', 1, 0)) AS Female FROM CleanedDataDB.EmpDevInfo
GROUP BY dept_name ;
-- __________________________________________________________________________________________________________________

-- 12. To retrieve the employee records who joined in the last quarter of the current year.

SELECT * FROM CleanedDataDB.EmpDevInfo
WHERE QUARTER(hired_date) = 4 ;
-- __________________________________________________________________________________________________________________

-- 13. To calculate the average salary for each department.

SELECT dept_name, ROUND(AVG(monthly_salary)) AS avg_sal FROM CleanedDataDB.EmpDevInfo
GROUP BY dept_name ;
-- __________________________________________________________________________________________________________________

-- 14. To retrieve employees who earn more than the average salary across all departments.

SELECT * FROM CleanedDataDB.EmpDevInfo
WHERE monthly_salary > (SELECT AVG(monthly_salary) FROM CleanedDataDB.EmpDevInfo) ; 
-- __________________________________________________________________________________________________________________

-- 15. To get employees earning more than the average salary within a specific department.

SELECT * FROM CleanedDataDB.EmpDevInfo a
WHERE dept_name = 'Front-End Developer' AND monthly_salary > (SELECT ROUND(AVG(monthly_salary)) AS fd_avg_sal FROM CleanedDataDB.EmpDevInfo b
	WHERE a.dept_name = b.dept_name);
-- __________________________________________________________________________________________________________________

-- 16. To retrieve the top 5 highest salaries from the table.

SELECT DISTINCT * FROM CleanedDataDB.EmpDevInfo
ORDER BY monthly_salary DESC 
LIMIT 5 ;
-- __________________________________________________________________________________________________________________

-- 17. To retrieve employees who have the maximum salary from each department.

SELECT * FROM CleanedDataDB.EmpDevInfo a WHERE monthly_salary = 
(SELECT  MAX(monthly_salary) AS max_sal FROM BackupDB.EmpDevInfo b
GROUP BY dept_name HAVING a.dept_name = b.dept_name);
-- __________________________________________________________________________________________________________________

-- 18. To fetch the record of an employee who has the highest salary in the table.

SELECT * FROM CleanedDataDB.EmpDevInfo 
WHERE monthly_salary = (SELECT MAX(monthly_salary) FROM CleanedDataDB.EmpDevInfo) ;
-- __________________________________________________________________________________________________________________

-- 19. To retrieve the record of an employee who has the second-highest salary in the table.

WITH CTE_1ST_MAX_SAL AS
		(SELECT MAX(monthly_salary) FROM CleanedDataDB.EmpDevInfo),
	 CTE_2ND_MAX_SAL AS
		(SELECT MAX(monthly_salary) AS 2nd_max_sal FROM CleanedDataDB.EmpDevInfo WHERE monthly_salary <> (SELECT * FROM CTE_1ST_MAX_SAL))
SELECT * FROM CleanedDataDB.EmpDevInfo 
WHERE monthly_salary = (SELECT * FROM CTE_2ND_MAX_SAL) ;
-- __________________________________________________________________________________________________________________

-- 20. To retrieve the record of an employee who has the lowest (minimum) salary in the table.

SELECT * FROM CleanedDataDB.EmpDevInfo 
WHERE monthly_salary = (SELECT MIN(monthly_salary) AS min_sal FROM CleanedDataDB.EmpDevInfo) ;
-- __________________________________________________________________________________________________________________

-- 21. To calculate the total number of employees in each salary category ('Low', 'Average', 'High').
 
SELECT 'Low' AS salary_category, SUM(IF(monthly_salary < 50000, 1, 0)) as total_emp
FROM CleanedDataDB.EmpDevInfo
UNION
SELECT 'Avg' AS salary_category, SUM(IF(monthly_salary >= 50000 AND monthly_salary < 70000, 1, 0)) as total_emp 
FROM CleanedDataDB.EmpDevInfo
UNION
SELECT 'High' AS salary_category, SUM(IF(monthly_salary >= 70000, 1, 0)) as total_emp 
FROM CleanedDataDB.EmpDevInfo ;
-- ==================================================================================================================